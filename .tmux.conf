set-option -g base-index 1
set-option -g mode-keys vi
set-option -g pane-base-index 1
set-option -g detach-on-destroy off
set -g default-terminal "xterm-256color"
set -s escape-time 0
set -g status-style 'bg=#333333 fg=#5eacd3'
set -g allow-passthrough on
set-option -g default-shell /bin/zsh


# Basic key bindings
unbind r
bind r source-file ~/.tmux.conf
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind Tab next-window
bind q kill-server
bind b kill-window
bind Space switch-client -n


bind-key s display-popup -E -w 50% -h 50% "tmux list-sessions | fzf | cut -d: -f1 | xargs tmux switch-client -t"
bind-key x display-popup -E -w 50% -h 40% "tmux list-sessions -F '#S' | fzf --preview 'tmux list-windows -t {}' | xargs -r tmux kill-session -t"

# Initialize empty harpoon sessions file on every tmux server start
# This ensures we always start fresh when tmux server is restarted
run-shell "cat /dev/null > ~/.tmux-harpoon-sessions; \
  for i in {1..9}; do \
    echo \"\" >> ~/.tmux-harpoon-sessions; \
  done"

# Set up a mode for pinning sessions (g is the prefix key)
bind g switch-client -T harpoon_pin_mode

# In harpoon_pin_mode, set bindings for number keys to pin to specific slots
bind-key -T harpoon_pin_mode 1 run-shell "sed -i '1s/.*/'\"#{session_name}\"'/' ~/.tmux-harpoon-sessions && tmux display-message 'Pinned #{session_name} to slot 1'"
bind-key -T harpoon_pin_mode 2 run-shell "sed -i '2s/.*/'\"#{session_name}\"'/' ~/.tmux-harpoon-sessions && tmux display-message 'Pinned #{session_name} to slot 2'"
bind-key -T harpoon_pin_mode 3 run-shell "sed -i '3s/.*/'\"#{session_name}\"'/' ~/.tmux-harpoon-sessions && tmux display-message 'Pinned #{session_name} to slot 3'"
bind-key -T harpoon_pin_mode 4 run-shell "sed -i '4s/.*/'\"#{session_name}\"'/' ~/.tmux-harpoon-sessions && tmux display-message 'Pinned #{session_name} to slot 4'"
bind-key -T harpoon_pin_mode 5 run-shell "sed -i '5s/.*/'\"#{session_name}\"'/' ~/.tmux-harpoon-sessions && tmux display-message 'Pinned #{session_name} to slot 5'"
bind-key -T harpoon_pin_mode 6 run-shell "sed -i '6s/.*/'\"#{session_name}\"'/' ~/.tmux-harpoon-sessions && tmux display-message 'Pinned #{session_name} to slot 6'"
bind-key -T harpoon_pin_mode 7 run-shell "sed -i '7s/.*/'\"#{session_name}\"'/' ~/.tmux-harpoon-sessions && tmux display-message 'Pinned #{session_name} to slot 7'"
bind-key -T harpoon_pin_mode 8 run-shell "sed -i '8s/.*/'\"#{session_name}\"'/' ~/.tmux-harpoon-sessions && tmux display-message 'Pinned #{session_name} to slot 8'"
bind-key -T harpoon_pin_mode 9 run-shell "sed -i '9s/.*/'\"#{session_name}\"'/' ~/.tmux-harpoon-sessions && tmux display-message 'Pinned #{session_name} to slot 9'"

# Add a "pin to next available" option in the harpoon mode
bind-key -T harpoon_pin_mode g run-shell "tmux display-message 'Pinning session...' && \
  tmux display-message 'Session: #{session_name}' && \
  (grep -Fxq '#{session_name}' ~/.tmux-harpoon-sessions || \
   echo '#{session_name}' >> ~/.tmux-harpoon-sessions)"

# Navigate to pinned sessions - only switch if session exists
bind 1 run-shell 'session=$(sed -n 1p ~/.tmux-harpoon-sessions); \
  if [ -n "$session" ]; then \
    if tmux has-session -t "$session" 2>/dev/null; then \
      tmux switch-client -t "$session"; \
    else \
      tmux display-message "Session $session does not exist"; \
    fi; \
  else \
    tmux display-message "No pinned session for slot 1"; \
  fi'

bind 2 run-shell 'session=$(sed -n 2p ~/.tmux-harpoon-sessions); \
  if [ -n "$session" ]; then \
    if tmux has-session -t "$session" 2>/dev/null; then \
      tmux switch-client -t "$session"; \
    else \
      tmux display-message "Session $session does not exist"; \
    fi; \
  else \
    tmux display-message "No pinned session for slot 2"; \
  fi'

bind 3 run-shell 'session=$(sed -n 3p ~/.tmux-harpoon-sessions); \
  if [ -n "$session" ]; then \
    if tmux has-session -t "$session" 2>/dev/null; then \
      tmux switch-client -t "$session"; \
    else \
      tmux display-message "Session $session does not exist"; \
    fi; \
  else \
    tmux display-message "No pinned session for slot 3"; \
  fi'

bind 4 run-shell 'session=$(sed -n 4p ~/.tmux-harpoon-sessions); \
  if [ -n "$session" ]; then \
    if tmux has-session -t "$session" 2>/dev/null; then \
      tmux switch-client -t "$session"; \
    else \
      tmux display-message "Session $session does not exist"; \
    fi; \
  else \
    tmux display-message "No pinned session for slot 4"; \
  fi'

bind 5 run-shell 'session=$(sed -n 5p ~/.tmux-harpoon-sessions); \
  if [ -n "$session" ]; then \
    if tmux has-session -t "$session" 2>/dev/null; then \
      tmux switch-client -t "$session"; \
    else \
      tmux display-message "Session $session does not exist"; \
    fi; \
  else \
    tmux display-message "No pinned session for slot 5"; \
  fi'

bind 6 run-shell 'session=$(sed -n 6p ~/.tmux-harpoon-sessions); \
  if [ -n "$session" ]; then \
    if tmux has-session -t "$session" 2>/dev/null; then \
      tmux switch-client -t "$session"; \
    else \
      tmux display-message "Session $session does not exist"; \
    fi; \
  else \
    tmux display-message "No pinned session for slot 6"; \
  fi'

bind 7 run-shell 'session=$(sed -n 7p ~/.tmux-harpoon-sessions); \
  if [ -n "$session" ]; then \
    if tmux has-session -t "$session" 2>/dev/null; then \
      tmux switch-client -t "$session"; \
    else \
      tmux display-message "Session $session does not exist"; \
    fi; \
  else \
    tmux display-message "No pinned session for slot 7"; \
  fi'

bind 8 run-shell 'session=$(sed -n 8p ~/.tmux-harpoon-sessions); \
  if [ -n "$session" ]; then \
    if tmux has-session -t "$session" 2>/dev/null; then \
      tmux switch-client -t "$session"; \
    else \
      tmux display-message "Session $session does not exist"; \
    fi; \
  else \
    tmux display-message "No pinned session for slot 8"; \
  fi'

bind 9 run-shell 'session=$(sed -n 9p ~/.tmux-harpoon-sessions); \
  if [ -n "$session" ]; then \
    if tmux has-session -t "$session" 2>/dev/null; then \
      tmux switch-client -t "$session"; \
    else \
      tmux display-message "Session $session does not exist"; \
    fi; \
  else \
    tmux display-message "No pinned session for slot 9"; \
  fi'

# Modified bind-f to create session and automatically pin it to first available slot
bind-key f display-popup -E "find ~/Programming/ ~/setup ~/scripts ~/.config ~/DEV ~/personal ~/dopi/ -mindepth 1 -maxdepth 1 -type d | fzf | xargs -I {} sh -c '
  session_name=\$(basename {});
  entry=\"\$session_name,{}\";
  grep -q \"^\$session_name,\" ~/.tmux_session_history && sed -i \"s|^\$session_name,.*|\$entry|\" ~/.tmux_session_history || echo \"\$entry\" >> ~/.tmux_session_history;
  sort -u ~/.tmux_session_history -o ~/.tmux_session_history;
  tmux new-session -d -s \"\$session_name\" -c \"{}\" \"nvim\";
  tmux switch-client -t \"\$session_name\";
  
  # Auto-pin to first available slot or append if all slots filled
  empty_line=\$(grep -n \"^$\" ~/.tmux-harpoon-sessions | head -1 | cut -d: -f1);
  if [ -n \"\$empty_line\" ]; then
    sed -i \"\${empty_line}s/.*/$session_name/\" ~/.tmux-harpoon-sessions;
    tmux display-message \"Pinned \$session_name to slot \$empty_line\";
  else
    echo \"\$session_name\" >> ~/.tmux-harpoon-sessions;
    tmux display-message \"Pinned \$session_name to end of list\";
  fi'"
